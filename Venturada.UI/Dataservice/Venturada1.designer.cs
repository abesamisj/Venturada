#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Venturada.UI.Dataservice
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="venturadahogs")]
	public partial class VenturadaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAboutUs(AboutUs instance);
    partial void UpdateAboutUs(AboutUs instance);
    partial void DeleteAboutUs(AboutUs instance);
    partial void InsertPartner(Partner instance);
    partial void UpdatePartner(Partner instance);
    partial void DeletePartner(Partner instance);
    partial void InsertProductsMain(ProductsMain instance);
    partial void UpdateProductsMain(ProductsMain instance);
    partial void DeleteProductsMain(ProductsMain instance);
    partial void InsertProductsList(ProductsList instance);
    partial void UpdateProductsList(ProductsList instance);
    partial void DeleteProductsList(ProductsList instance);
    partial void InsertProductCategory(ProductCategory instance);
    partial void UpdateProductCategory(ProductCategory instance);
    partial void DeleteProductCategory(ProductCategory instance);
    partial void InsertProductHeader(ProductHeader instance);
    partial void UpdateProductHeader(ProductHeader instance);
    partial void DeleteProductHeader(ProductHeader instance);
    partial void InsertPriceList(PriceList instance);
    partial void UpdatePriceList(PriceList instance);
    partial void DeletePriceList(PriceList instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertPromo(Promo instance);
    partial void UpdatePromo(Promo instance);
    partial void DeletePromo(Promo instance);
    partial void InsertGallery(Gallery instance);
    partial void UpdateGallery(Gallery instance);
    partial void DeleteGallery(Gallery instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertContactNumber(ContactNumber instance);
    partial void UpdateContactNumber(ContactNumber instance);
    partial void DeleteContactNumber(ContactNumber instance);
    partial void InsertEmailAddress(EmailAddress instance);
    partial void UpdateEmailAddress(EmailAddress instance);
    partial void DeleteEmailAddress(EmailAddress instance);
    partial void InsertShoppingHour(ShoppingHour instance);
    partial void UpdateShoppingHour(ShoppingHour instance);
    partial void DeleteShoppingHour(ShoppingHour instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertContactAdditional(ContactAdditional instance);
    partial void UpdateContactAdditional(ContactAdditional instance);
    partial void DeleteContactAdditional(ContactAdditional instance);
    partial void InsertSocialMedia(SocialMedia instance);
    partial void UpdateSocialMedia(SocialMedia instance);
    partial void DeleteSocialMedia(SocialMedia instance);
    #endregion
		
		public VenturadaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VenturadaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VenturadaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VenturadaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VenturadaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AboutUs> AboutUs
		{
			get
			{
				return this.GetTable<AboutUs>();
			}
		}
		
		public System.Data.Linq.Table<Partner> Partners
		{
			get
			{
				return this.GetTable<Partner>();
			}
		}
		
		public System.Data.Linq.Table<ProductsMain> ProductsMains
		{
			get
			{
				return this.GetTable<ProductsMain>();
			}
		}
		
		public System.Data.Linq.Table<ProductsList> ProductsLists
		{
			get
			{
				return this.GetTable<ProductsList>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategory> ProductCategories
		{
			get
			{
				return this.GetTable<ProductCategory>();
			}
		}
		
		public System.Data.Linq.Table<ProductHeader> ProductHeaders
		{
			get
			{
				return this.GetTable<ProductHeader>();
			}
		}
		
		public System.Data.Linq.Table<PriceList> PriceLists
		{
			get
			{
				return this.GetTable<PriceList>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Promo> Promos
		{
			get
			{
				return this.GetTable<Promo>();
			}
		}
		
		public System.Data.Linq.Table<Gallery> Galleries
		{
			get
			{
				return this.GetTable<Gallery>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<ContactNumber> ContactNumbers
		{
			get
			{
				return this.GetTable<ContactNumber>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddress> EmailAddresses
		{
			get
			{
				return this.GetTable<EmailAddress>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingHour> ShoppingHours
		{
			get
			{
				return this.GetTable<ShoppingHour>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<ContactAdditional> ContactAdditionals
		{
			get
			{
				return this.GetTable<ContactAdditional>();
			}
		}
		
		public System.Data.Linq.Table<SocialMedia> SocialMedias
		{
			get
			{
				return this.GetTable<SocialMedia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AboutUs")]
	public partial class AboutUs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AboutUsId;
		
		private string _ImageUrl;
		
		private string _AboutUsTitle;
		
		private string _AboutUsParagraph;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAboutUsIdChanging(int value);
    partial void OnAboutUsIdChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnAboutUsTitleChanging(string value);
    partial void OnAboutUsTitleChanged();
    partial void OnAboutUsParagraphChanging(string value);
    partial void OnAboutUsParagraphChanged();
    #endregion
		
		public AboutUs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutUsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AboutUsId
		{
			get
			{
				return this._AboutUsId;
			}
			set
			{
				if ((this._AboutUsId != value))
				{
					this.OnAboutUsIdChanging(value);
					this.SendPropertyChanging();
					this._AboutUsId = value;
					this.SendPropertyChanged("AboutUsId");
					this.OnAboutUsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="VarChar(500)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutUsTitle", DbType="VarChar(100)")]
		public string AboutUsTitle
		{
			get
			{
				return this._AboutUsTitle;
			}
			set
			{
				if ((this._AboutUsTitle != value))
				{
					this.OnAboutUsTitleChanging(value);
					this.SendPropertyChanging();
					this._AboutUsTitle = value;
					this.SendPropertyChanged("AboutUsTitle");
					this.OnAboutUsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutUsParagraph", DbType="VarChar(MAX)")]
		public string AboutUsParagraph
		{
			get
			{
				return this._AboutUsParagraph;
			}
			set
			{
				if ((this._AboutUsParagraph != value))
				{
					this.OnAboutUsParagraphChanging(value);
					this.SendPropertyChanging();
					this._AboutUsParagraph = value;
					this.SendPropertyChanged("AboutUsParagraph");
					this.OnAboutUsParagraphChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partners")]
	public partial class Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartnerId;
		
		private string _ImageUrl;
		
		private string _Description;
		
		private int _Sequence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartnerIdChanging(int value);
    partial void OnPartnerIdChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public Partner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartnerId
		{
			get
			{
				return this._PartnerId;
			}
			set
			{
				if ((this._PartnerId != value))
				{
					this.OnPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._PartnerId = value;
					this.SendPropertyChanged("PartnerId");
					this.OnPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="VarChar(500)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsMain")]
	public partial class ProductsMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductsMainId;
		
		private string _ImageURLString;
		
		private string _ProductMainParagraph;
		
		private string _ProductSubParagraph;
		
		private string _ProductMainParagraphTitle;
		
		private string _ProductSubParagraphTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductsMainIdChanging(int value);
    partial void OnProductsMainIdChanged();
    partial void OnImageURLStringChanging(string value);
    partial void OnImageURLStringChanged();
    partial void OnProductMainParagraphChanging(string value);
    partial void OnProductMainParagraphChanged();
    partial void OnProductSubParagraphChanging(string value);
    partial void OnProductSubParagraphChanged();
    partial void OnProductMainParagraphTitleChanging(string value);
    partial void OnProductMainParagraphTitleChanged();
    partial void OnProductSubParagraphTitleChanging(string value);
    partial void OnProductSubParagraphTitleChanged();
    #endregion
		
		public ProductsMain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductsMainId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductsMainId
		{
			get
			{
				return this._ProductsMainId;
			}
			set
			{
				if ((this._ProductsMainId != value))
				{
					this.OnProductsMainIdChanging(value);
					this.SendPropertyChanging();
					this._ProductsMainId = value;
					this.SendPropertyChanged("ProductsMainId");
					this.OnProductsMainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURLString", DbType="VarChar(500)")]
		public string ImageURLString
		{
			get
			{
				return this._ImageURLString;
			}
			set
			{
				if ((this._ImageURLString != value))
				{
					this.OnImageURLStringChanging(value);
					this.SendPropertyChanging();
					this._ImageURLString = value;
					this.SendPropertyChanged("ImageURLString");
					this.OnImageURLStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductMainParagraph", DbType="VarChar(MAX)")]
		public string ProductMainParagraph
		{
			get
			{
				return this._ProductMainParagraph;
			}
			set
			{
				if ((this._ProductMainParagraph != value))
				{
					this.OnProductMainParagraphChanging(value);
					this.SendPropertyChanging();
					this._ProductMainParagraph = value;
					this.SendPropertyChanged("ProductMainParagraph");
					this.OnProductMainParagraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSubParagraph", DbType="VarChar(500)")]
		public string ProductSubParagraph
		{
			get
			{
				return this._ProductSubParagraph;
			}
			set
			{
				if ((this._ProductSubParagraph != value))
				{
					this.OnProductSubParagraphChanging(value);
					this.SendPropertyChanging();
					this._ProductSubParagraph = value;
					this.SendPropertyChanged("ProductSubParagraph");
					this.OnProductSubParagraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductMainParagraphTitle", DbType="VarChar(100)")]
		public string ProductMainParagraphTitle
		{
			get
			{
				return this._ProductMainParagraphTitle;
			}
			set
			{
				if ((this._ProductMainParagraphTitle != value))
				{
					this.OnProductMainParagraphTitleChanging(value);
					this.SendPropertyChanging();
					this._ProductMainParagraphTitle = value;
					this.SendPropertyChanged("ProductMainParagraphTitle");
					this.OnProductMainParagraphTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSubParagraphTitle", DbType="VarChar(100)")]
		public string ProductSubParagraphTitle
		{
			get
			{
				return this._ProductSubParagraphTitle;
			}
			set
			{
				if ((this._ProductSubParagraphTitle != value))
				{
					this.OnProductSubParagraphTitleChanging(value);
					this.SendPropertyChanging();
					this._ProductSubParagraphTitle = value;
					this.SendPropertyChanged("ProductSubParagraphTitle");
					this.OnProductSubParagraphTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsList")]
	public partial class ProductsList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private string _MainDescriptionTitle;
		
		private string _MainDescription;
		
		private string _DetailsDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnMainDescriptionTitleChanging(string value);
    partial void OnMainDescriptionTitleChanged();
    partial void OnMainDescriptionChanging(string value);
    partial void OnMainDescriptionChanged();
    partial void OnDetailsDescriptionChanging(string value);
    partial void OnDetailsDescriptionChanged();
    #endregion
		
		public ProductsList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDescriptionTitle", DbType="VarChar(50)")]
		public string MainDescriptionTitle
		{
			get
			{
				return this._MainDescriptionTitle;
			}
			set
			{
				if ((this._MainDescriptionTitle != value))
				{
					this.OnMainDescriptionTitleChanging(value);
					this.SendPropertyChanging();
					this._MainDescriptionTitle = value;
					this.SendPropertyChanged("MainDescriptionTitle");
					this.OnMainDescriptionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDescription", DbType="VarChar(500)")]
		public string MainDescription
		{
			get
			{
				return this._MainDescription;
			}
			set
			{
				if ((this._MainDescription != value))
				{
					this.OnMainDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MainDescription = value;
					this.SendPropertyChanged("MainDescription");
					this.OnMainDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsDescription", DbType="VarChar(MAX)")]
		public string DetailsDescription
		{
			get
			{
				return this._DetailsDescription;
			}
			set
			{
				if ((this._DetailsDescription != value))
				{
					this.OnDetailsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DetailsDescription = value;
					this.SendPropertyChanged("DetailsDescription");
					this.OnDetailsDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategory")]
	public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCategoryId;
		
		private string _ProductCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCategoryIdChanging(int value);
    partial void OnProductCategoryIdChanged();
    partial void OnProductCategory1Changing(string value);
    partial void OnProductCategory1Changed();
    #endregion
		
		public ProductCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCategoryId
		{
			get
			{
				return this._ProductCategoryId;
			}
			set
			{
				if ((this._ProductCategoryId != value))
				{
					this.OnProductCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryId = value;
					this.SendPropertyChanged("ProductCategoryId");
					this.OnProductCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProductCategory", Storage="_ProductCategory1", DbType="VarChar(100)")]
		public string ProductCategory1
		{
			get
			{
				return this._ProductCategory1;
			}
			set
			{
				if ((this._ProductCategory1 != value))
				{
					this.OnProductCategory1Changing(value);
					this.SendPropertyChanging();
					this._ProductCategory1 = value;
					this.SendPropertyChanged("ProductCategory1");
					this.OnProductCategory1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductHeader")]
	public partial class ProductHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductLabelId;
		
		private int _ProductCategoryId;
		
		private string _ProductTableTitleDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductLabelIdChanging(int value);
    partial void OnProductLabelIdChanged();
    partial void OnProductCategoryIdChanging(int value);
    partial void OnProductCategoryIdChanged();
    partial void OnProductTableTitleDescriptionChanging(string value);
    partial void OnProductTableTitleDescriptionChanged();
    #endregion
		
		public ProductHeader()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLabelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductLabelId
		{
			get
			{
				return this._ProductLabelId;
			}
			set
			{
				if ((this._ProductLabelId != value))
				{
					this.OnProductLabelIdChanging(value);
					this.SendPropertyChanging();
					this._ProductLabelId = value;
					this.SendPropertyChanged("ProductLabelId");
					this.OnProductLabelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryId", DbType="Int NOT NULL")]
		public int ProductCategoryId
		{
			get
			{
				return this._ProductCategoryId;
			}
			set
			{
				if ((this._ProductCategoryId != value))
				{
					this.OnProductCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryId = value;
					this.SendPropertyChanged("ProductCategoryId");
					this.OnProductCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTableTitleDescription", DbType="VarChar(250)")]
		public string ProductTableTitleDescription
		{
			get
			{
				return this._ProductTableTitleDescription;
			}
			set
			{
				if ((this._ProductTableTitleDescription != value))
				{
					this.OnProductTableTitleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductTableTitleDescription = value;
					this.SendPropertyChanged("ProductTableTitleDescription");
					this.OnProductTableTitleDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceList")]
	public partial class PriceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceListId;
		
		private int _ProductCategoryId;
		
		private string _ProductName;
		
		private string _ProductDescription;
		
		private string _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceListIdChanging(int value);
    partial void OnPriceListIdChanged();
    partial void OnProductCategoryIdChanging(int value);
    partial void OnProductCategoryIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    #endregion
		
		public PriceList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PriceListId
		{
			get
			{
				return this._PriceListId;
			}
			set
			{
				if ((this._PriceListId != value))
				{
					this.OnPriceListIdChanging(value);
					this.SendPropertyChanging();
					this._PriceListId = value;
					this.SendPropertyChanged("PriceListId");
					this.OnPriceListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryId", DbType="Int NOT NULL")]
		public int ProductCategoryId
		{
			get
			{
				return this._ProductCategoryId;
			}
			set
			{
				if ((this._ProductCategoryId != value))
				{
					this.OnProductCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryId = value;
					this.SendPropertyChanged("ProductCategoryId");
					this.OnProductCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="VarChar(100)")]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Services")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServicesId;
		
		private string _ServiceName;
		
		private string _ServiceSubTitle;
		
		private string _ServiceDescription;
		
		private string _ImageString;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServicesIdChanging(int value);
    partial void OnServicesIdChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnServiceSubTitleChanging(string value);
    partial void OnServiceSubTitleChanged();
    partial void OnServiceDescriptionChanging(string value);
    partial void OnServiceDescriptionChanged();
    partial void OnImageStringChanging(string value);
    partial void OnImageStringChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicesId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServicesId
		{
			get
			{
				return this._ServicesId;
			}
			set
			{
				if ((this._ServicesId != value))
				{
					this.OnServicesIdChanging(value);
					this.SendPropertyChanging();
					this._ServicesId = value;
					this.SendPropertyChanged("ServicesId");
					this.OnServicesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="VarChar(100)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSubTitle", DbType="VarChar(100)")]
		public string ServiceSubTitle
		{
			get
			{
				return this._ServiceSubTitle;
			}
			set
			{
				if ((this._ServiceSubTitle != value))
				{
					this.OnServiceSubTitleChanging(value);
					this.SendPropertyChanging();
					this._ServiceSubTitle = value;
					this.SendPropertyChanged("ServiceSubTitle");
					this.OnServiceSubTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescription", DbType="VarChar(MAX)")]
		public string ServiceDescription
		{
			get
			{
				return this._ServiceDescription;
			}
			set
			{
				if ((this._ServiceDescription != value))
				{
					this.OnServiceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ServiceDescription = value;
					this.SendPropertyChanged("ServiceDescription");
					this.OnServiceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageString", DbType="VarChar(MAX)")]
		public string ImageString
		{
			get
			{
				return this._ImageString;
			}
			set
			{
				if ((this._ImageString != value))
				{
					this.OnImageStringChanging(value);
					this.SendPropertyChanging();
					this._ImageString = value;
					this.SendPropertyChanged("ImageString");
					this.OnImageStringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promo")]
	public partial class Promo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromoId;
		
		private string _PromoTitle;
		
		private string _PromoDescription;
		
		private string _ImageString;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoIdChanging(int value);
    partial void OnPromoIdChanged();
    partial void OnPromoTitleChanging(string value);
    partial void OnPromoTitleChanged();
    partial void OnPromoDescriptionChanging(string value);
    partial void OnPromoDescriptionChanged();
    partial void OnImageStringChanging(string value);
    partial void OnImageStringChanged();
    #endregion
		
		public Promo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromoId
		{
			get
			{
				return this._PromoId;
			}
			set
			{
				if ((this._PromoId != value))
				{
					this.OnPromoIdChanging(value);
					this.SendPropertyChanging();
					this._PromoId = value;
					this.SendPropertyChanged("PromoId");
					this.OnPromoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoTitle", DbType="VarChar(50)")]
		public string PromoTitle
		{
			get
			{
				return this._PromoTitle;
			}
			set
			{
				if ((this._PromoTitle != value))
				{
					this.OnPromoTitleChanging(value);
					this.SendPropertyChanging();
					this._PromoTitle = value;
					this.SendPropertyChanged("PromoTitle");
					this.OnPromoTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoDescription", DbType="VarChar(MAX)")]
		public string PromoDescription
		{
			get
			{
				return this._PromoDescription;
			}
			set
			{
				if ((this._PromoDescription != value))
				{
					this.OnPromoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PromoDescription = value;
					this.SendPropertyChanged("PromoDescription");
					this.OnPromoDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageString", DbType="VarChar(MAX)")]
		public string ImageString
		{
			get
			{
				return this._ImageString;
			}
			set
			{
				if ((this._ImageString != value))
				{
					this.OnImageStringChanging(value);
					this.SendPropertyChanging();
					this._ImageString = value;
					this.SendPropertyChanged("ImageString");
					this.OnImageStringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gallery")]
	public partial class Gallery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GalleryId;
		
		private string _GalleryTitle;
		
		private string _GalleryDescription;
		
		private int _Row;
		
		private string _ImageString;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalleryIdChanging(int value);
    partial void OnGalleryIdChanged();
    partial void OnGalleryTitleChanging(string value);
    partial void OnGalleryTitleChanged();
    partial void OnGalleryDescriptionChanging(string value);
    partial void OnGalleryDescriptionChanged();
    partial void OnRowChanging(int value);
    partial void OnRowChanged();
    partial void OnImageStringChanging(string value);
    partial void OnImageStringChanged();
    #endregion
		
		public Gallery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryTitle", DbType="VarChar(50)")]
		public string GalleryTitle
		{
			get
			{
				return this._GalleryTitle;
			}
			set
			{
				if ((this._GalleryTitle != value))
				{
					this.OnGalleryTitleChanging(value);
					this.SendPropertyChanging();
					this._GalleryTitle = value;
					this.SendPropertyChanged("GalleryTitle");
					this.OnGalleryTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryDescription", DbType="VarChar(200)")]
		public string GalleryDescription
		{
			get
			{
				return this._GalleryDescription;
			}
			set
			{
				if ((this._GalleryDescription != value))
				{
					this.OnGalleryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GalleryDescription = value;
					this.SendPropertyChanged("GalleryDescription");
					this.OnGalleryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="Int NOT NULL")]
		public int Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageString", DbType="VarChar(MAX)")]
		public string ImageString
		{
			get
			{
				return this._ImageString;
			}
			set
			{
				if ((this._ImageString != value))
				{
					this.OnImageStringChanging(value);
					this.SendPropertyChanging();
					this._ImageString = value;
					this.SendPropertyChanged("ImageString");
					this.OnImageStringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactId;
		
		private string _CompanyName;
		
		private string _TagLine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIdChanging(int value);
    partial void OnContactIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnTagLineChanging(string value);
    partial void OnTagLineChanged();
    #endregion
		
		public Contact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagLine", DbType="VarChar(50)")]
		public string TagLine
		{
			get
			{
				return this._TagLine;
			}
			set
			{
				if ((this._TagLine != value))
				{
					this.OnTagLineChanging(value);
					this.SendPropertyChanging();
					this._TagLine = value;
					this.SendPropertyChanged("TagLine");
					this.OnTagLineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactNumber")]
	public partial class ContactNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactNumberId;
		
		private string _ContactNumber1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactNumberIdChanging(int value);
    partial void OnContactNumberIdChanged();
    partial void OnContactNumber1Changing(string value);
    partial void OnContactNumber1Changed();
    #endregion
		
		public ContactNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactNumberId
		{
			get
			{
				return this._ContactNumberId;
			}
			set
			{
				if ((this._ContactNumberId != value))
				{
					this.OnContactNumberIdChanging(value);
					this.SendPropertyChanging();
					this._ContactNumberId = value;
					this.SendPropertyChanged("ContactNumberId");
					this.OnContactNumberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ContactNumber", Storage="_ContactNumber1", DbType="VarChar(50)")]
		public string ContactNumber1
		{
			get
			{
				return this._ContactNumber1;
			}
			set
			{
				if ((this._ContactNumber1 != value))
				{
					this.OnContactNumber1Changing(value);
					this.SendPropertyChanging();
					this._ContactNumber1 = value;
					this.SendPropertyChanged("ContactNumber1");
					this.OnContactNumber1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailAddress")]
	public partial class EmailAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailAddressId;
		
		private string _EmailAddress1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAddressIdChanging(int value);
    partial void OnEmailAddressIdChanged();
    partial void OnEmailAddress1Changing(string value);
    partial void OnEmailAddress1Changed();
    #endregion
		
		public EmailAddress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailAddressId
		{
			get
			{
				return this._EmailAddressId;
			}
			set
			{
				if ((this._EmailAddressId != value))
				{
					this.OnEmailAddressIdChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressId = value;
					this.SendPropertyChanged("EmailAddressId");
					this.OnEmailAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EmailAddress", Storage="_EmailAddress1", DbType="VarChar(50)")]
		public string EmailAddress1
		{
			get
			{
				return this._EmailAddress1;
			}
			set
			{
				if ((this._EmailAddress1 != value))
				{
					this.OnEmailAddress1Changing(value);
					this.SendPropertyChanging();
					this._EmailAddress1 = value;
					this.SendPropertyChanged("EmailAddress1");
					this.OnEmailAddress1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingHours")]
	public partial class ShoppingHour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShoppingHoursId;
		
		private string _ShoppingHours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoppingHoursIdChanging(int value);
    partial void OnShoppingHoursIdChanged();
    partial void OnShoppingHoursChanging(string value);
    partial void OnShoppingHoursChanged();
    #endregion
		
		public ShoppingHour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingHoursId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShoppingHoursId
		{
			get
			{
				return this._ShoppingHoursId;
			}
			set
			{
				if ((this._ShoppingHoursId != value))
				{
					this.OnShoppingHoursIdChanging(value);
					this.SendPropertyChanging();
					this._ShoppingHoursId = value;
					this.SendPropertyChanged("ShoppingHoursId");
					this.OnShoppingHoursIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingHours", DbType="VarChar(50)")]
		public string ShoppingHours
		{
			get
			{
				return this._ShoppingHours;
			}
			set
			{
				if ((this._ShoppingHours != value))
				{
					this.OnShoppingHoursChanging(value);
					this.SendPropertyChanging();
					this._ShoppingHours = value;
					this.SendPropertyChanged("ShoppingHours");
					this.OnShoppingHoursChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressId;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _Country;
		
		private string _PostCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    #endregion
		
		public Address()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(50)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(50)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(10)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactAdditional")]
	public partial class ContactAdditional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactAdditionalId;
		
		private string _ContactTitle;
		
		private string _ContactDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactAdditionalIdChanging(int value);
    partial void OnContactAdditionalIdChanged();
    partial void OnContactTitleChanging(string value);
    partial void OnContactTitleChanged();
    partial void OnContactDescriptionChanging(string value);
    partial void OnContactDescriptionChanged();
    #endregion
		
		public ContactAdditional()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactAdditionalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactAdditionalId
		{
			get
			{
				return this._ContactAdditionalId;
			}
			set
			{
				if ((this._ContactAdditionalId != value))
				{
					this.OnContactAdditionalIdChanging(value);
					this.SendPropertyChanging();
					this._ContactAdditionalId = value;
					this.SendPropertyChanged("ContactAdditionalId");
					this.OnContactAdditionalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTitle", DbType="VarChar(150)")]
		public string ContactTitle
		{
			get
			{
				return this._ContactTitle;
			}
			set
			{
				if ((this._ContactTitle != value))
				{
					this.OnContactTitleChanging(value);
					this.SendPropertyChanging();
					this._ContactTitle = value;
					this.SendPropertyChanged("ContactTitle");
					this.OnContactTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDescription", DbType="VarChar(MAX)")]
		public string ContactDescription
		{
			get
			{
				return this._ContactDescription;
			}
			set
			{
				if ((this._ContactDescription != value))
				{
					this.OnContactDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ContactDescription = value;
					this.SendPropertyChanged("ContactDescription");
					this.OnContactDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SocialMedia")]
	public partial class SocialMedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SocialMediaId;
		
		private string _SocialMediaType;
		
		private string _SocialMediaUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSocialMediaIdChanging(int value);
    partial void OnSocialMediaIdChanged();
    partial void OnSocialMediaTypeChanging(string value);
    partial void OnSocialMediaTypeChanged();
    partial void OnSocialMediaUrlChanging(string value);
    partial void OnSocialMediaUrlChanged();
    #endregion
		
		public SocialMedia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialMediaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SocialMediaId
		{
			get
			{
				return this._SocialMediaId;
			}
			set
			{
				if ((this._SocialMediaId != value))
				{
					this.OnSocialMediaIdChanging(value);
					this.SendPropertyChanging();
					this._SocialMediaId = value;
					this.SendPropertyChanged("SocialMediaId");
					this.OnSocialMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialMediaType", DbType="VarChar(50)")]
		public string SocialMediaType
		{
			get
			{
				return this._SocialMediaType;
			}
			set
			{
				if ((this._SocialMediaType != value))
				{
					this.OnSocialMediaTypeChanging(value);
					this.SendPropertyChanging();
					this._SocialMediaType = value;
					this.SendPropertyChanged("SocialMediaType");
					this.OnSocialMediaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialMediaUrl", DbType="VarChar(MAX)")]
		public string SocialMediaUrl
		{
			get
			{
				return this._SocialMediaUrl;
			}
			set
			{
				if ((this._SocialMediaUrl != value))
				{
					this.OnSocialMediaUrlChanging(value);
					this.SendPropertyChanging();
					this._SocialMediaUrl = value;
					this.SendPropertyChanged("SocialMediaUrl");
					this.OnSocialMediaUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
